{"version":3,"file":"static/js/736.cd47a108.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Common/Common.styled.jsx","constans/ImageURL.js","constans/Status.js","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tcolumn-gap: 20px;\n\trow-gap: 40px;\n`;\n\nexport const Item = styled.li`\n\twidth: 232px;\n\tflex-basis: calc((100% - 20px * (5 - 1)) / 5);\n`;\n\nexport const ImgBox = styled.div`\n\theight: 350px;\n\n\timg {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tborder-radius: 10px;\n\t}\n`;\n\nexport const Name = styled.p`\n\tfont-weight: 600;\n\tmargin-top: 8px;\n\tline-height: 1.5;\n`;\n\nexport const Character = styled.p`\n\tmargin-top: 8px;\n\tline-height: 1.5;\n\n\tspan {\n\t\tfont-weight: 600;\n\t}\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { fetchCastById } from \"services/moviesApi\";\nimport { STATUS } from \"constans/Status\";\nimport { IMAGE_URL } from \"constans/ImageURL\";\nimport imageReplace from \"images/poster-not-found.jpg\";\n\nimport { Loading, NotFound } from \"components/Common/Common.styled\";\nimport { Character, ImgBox, Item, List, Name } from \"./Cast.styled\";\n\nconst Cast = () => {\n\tconst [cast, setCast] = useState([]);\n\tconst [status, setStatus] = useState(STATUS.idle);\n\n\tconst { movieId } = useParams();\n\n\tuseEffect(() => {\n\t\tconst getCast = async query => {\n\t\t\tsetStatus(STATUS.loading);\n\t\t\ttry {\n\t\t\t\tconst data = await fetchCastById(query);\n\t\t\t\tonResolve(data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetStatus(STATUS.error);\n\t\t\t}\n\t\t};\n\t\tgetCast(movieId);\n\t}, [movieId]);\n\n\tconst onResolve = data => {\n\t\tconst dataCast = data.map(({ cast_id, character, name, profile_path }) => ({\n\t\t\tid: cast_id,\n\t\t\tcharacter,\n\t\t\tname,\n\t\t\timg: profile_path,\n\t\t}));\n\n\t\tsetCast(dataCast);\n\t\tsetStatus(STATUS.success);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{status === STATUS.error && <NotFound>NOT FOUND</NotFound>}\n\t\t\t{status === STATUS.loading && <Loading>Loading...</Loading>}\n\t\t\t{status === STATUS.success && cast.length === 0 ? (\n\t\t\t\t<p>Not information</p>\n\t\t\t) : (\n\t\t\t\t<List>\n\t\t\t\t\t{cast.map(({ id, character, name, img }) => (\n\t\t\t\t\t\t<Item key={id}>\n\t\t\t\t\t\t\t<ImgBox>\n\t\t\t\t\t\t\t\t{img ? (\n\t\t\t\t\t\t\t\t\t<img src={`${IMAGE_URL}` + img} alt={name} width={232} height={350} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<img src={imageReplace} alt=\"Plug\" width={232} height={350} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ImgBox>\n\t\t\t\t\t\t\t<Name>{name}</Name>\n\t\t\t\t\t\t\t<Character>\n\t\t\t\t\t\t\t\t<span>Character:</span> {character}\n\t\t\t\t\t\t\t</Character>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Cast;","import styled from 'styled-components';\n\nexport const Section = styled.section`\n\tpadding: 60px 0;\n`;\n\nexport const Title = styled.h1`\n\tfont-weight: 600;\n\tfont-size: 26px;\n\twhite-space: nowrap;\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: row-reverse;\n\tcolumn-gap: 20px;\n\tmargin-bottom: 25px;\n\n\t&::before {\n\t\tcontent: \"\";\n\t\tdisplay: inline-block;\n\t\twidth: 100%;\n\t\theight: 1px;\n\t\tbackground-color: var(--accent);\n\t\ttransform: translateY(2px);\n\t}\n`;\n\nexport const NotFound = styled.p`\n\tfont-weight: 600;\n\tfont-size: 22px;\n\tcolor: var(--accent);\n`;\n\nexport const Loading = styled.p`\n\tfont-size: 20px;\n\tcolor: var(--gray);\n`;\n","export const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';","export const STATUS = {\n\tidle: 'idle',\n\tloading: 'loading',\n\tsuccess: 'success',\n\terror: 'error',\n}","import axios from 'axios';\n\nconst API_KEY = 'bf2393b8354e3e35d9cd0d94a6af5ebc';\nconst moviesApi = axios.create({\n\tbaseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const fetchTrendingMovies = async () => {\n\tconst {\n\t\tdata: { results },\n\t} = await moviesApi.get(`trending/movie/day`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn results;\n};\n\nexport const fetchSearchMovies = async searchName => {\n\tconst {\n\t\tdata: { results },\n\t} = await moviesApi.get(`search/movie`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tquery: searchName,\n\t\t},\n\t});\n\treturn results;\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n\tconst { data } = await moviesApi.get(`movie/${movieId}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn data;\n};\n\nexport const fetchCastById = async movieId => {\n\tconst {\n\t\tdata: { cast },\n\t} = await moviesApi.get(`movie/${movieId}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn cast;\n};\n\nexport const fetchReviewsById = async movieId => {\n\tconst {\n\t\tdata: { results },\n\t} = await moviesApi.get(`movie/${movieId}/reviews`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn results;\n};"],"names":["List","styled","Item","ImgBox","Name","Character","useState","cast","setCast","STATUS","status","setStatus","movieId","useParams","useEffect","getCast","query","fetchCastById","data","onResolve","console","log","dataCast","map","id","cast_id","character","name","img","profile_path","length","src","IMAGE_URL","alt","width","height","imageReplace","Section","Title","NotFound","Loading","idle","loading","success","error","API_KEY","moviesApi","axios","baseURL","fetchTrendingMovies","get","params","api_key","results","fetchSearchMovies","searchName","fetchMovieDetailsById","fetchReviewsById"],"sourceRoot":""}